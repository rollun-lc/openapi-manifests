openapi: 3.0.0
info:
  version: "1"
  title: "CatalogData"
  description: Get product info from catalog
servers:
  - url: http://catalog/openapi/CatalogData/v1
tags:
  - name: Catalog
paths:
  "/rid/byBrandAndMpn":
    post:
      tags:
        - Catalog
      summary: "Find rids for pairs of brand and MPN.
                MPNs will be formatted by our general rules for rids catalog.
                Brand names will be NOT formatted, and need to match our brand_ids."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandAndMpnRequest'
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NullableProductsResponse"
        "500":
          description: "Internal error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  "/product/{marketplace}/{rid}":
    get:
      tags:
        - Catalog
      summary: "Get product info by rid for specific marketplace"
      parameters:
        - name: marketplace
          in: path
          required: true
          schema:
            type: string
            enum:
              - "Amazon"
              - "Ebay Plaisir"
              - "Ebay Rollun"
        - name: rid
          in: path
          required: true
          schema:
            type: string
        - name: include
          in: query
          required: false
          description: If set, only fields that are listed in this array will be returned
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: exclude
          in: query
          required: false
          description: If set, fields that are listed in this array will NOT be returned
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResponse"
        "500":
          description: "Internal error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  "/wheel/{rid}":
    get:
      tags:
        - Catalog
      summary: "Get specific wheel info by rid"
      parameters:
        - name: rid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WheelResponse"
        "500":
          description: "Internal error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        messages:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/Message"
      description: "Message field is not required"
    Message:
      type: object
      properties:
        level:
          type: string
          enum:
            - emergency
            - alert
            - critical
            - error
            - warning
            - notice
            - info
        type:
          type: string
          enum:
            - UNDEFINED
            - INVALID_RESPONSE
          description: >
            UNDEFINED - Any undefined message type
            INVALID_RESPONSE - A message generated by the client stating that the response could not be decoded
        text:
          type: string
          description: Message, that describes what went wrong
    SuccessResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
      type: object
      properties:
        data:
          type: object
    NullableProductsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/NullableProduct'
    ProductResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
      properties:
        data:
          $ref: '#/components/schemas/Product'
    WheelResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
      properties:
        data:
          $ref: '#/components/schemas/Wheel'
    BrandAndMpnRequest:
      type: object
      required:
        - products
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/BrandAndMpn'

    ## Resource object
    BrandAndMpn:
      type: object
      required:
        - brand
        - mpn
      properties:
        brand:
          type: string
          description: "Value need to match our brand_ids, as it will not be formatted"
          example: "WSM"
        mpn:
          type: string
          description: "Value can be passed in its original form, as it will be automatically formatted by our general rules for rids catalog"
          example: "002-048-01"
    NullableProduct:
      type: object
      properties:
        rid:
          type: string
          nullable: true
        quantity:
          type: integer
          nullable: true
        price:
          type: number
          nullable: true
        priceMin:
          type: number
          nullable: true
        priceMax:
          type: number
          nullable: true
        formula:
          type: string
          nullable: true
        formulaMin:
          type: string
          nullable: true
        shippingCost:
          type: number
          nullable: true
        shippingTemplate:
          type: string
          nullable: true
        brand:
          type: string
          nullable: true
        mpn:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        photoUris:
          type: array
          nullable: true
          items:
            type: string
        location:
          type: string
          nullable: true
    Product:
      type: object
      allOf:
        - $ref: '#/components/schemas/NullableProduct'
      required:
        - rid
      properties:
        rid:
          type: string
          nullable: false
    Wheel:
      type: object
      required:
        - rid
      properties:
        rid:
          type: string
          nullable: false
        aspectRatio:
          type: string
          nullable: true
        wheelWidth:
          type: string
          nullable: true
        sectionWidth:
          type: string
          nullable: true
        diameter:
          type: string
          nullable: true
        quantity:
          type: string
          nullable: false
          default: "1"