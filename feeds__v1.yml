openapi: 3.0.0
info:
  version: "1"
  title: "Feeds"
  description: Generated by Manifests generator v1.5.3. Feeds API
servers:
  - url: http://amz-orders-ngx/openapi/Feeds/v1
  - url: http://host.docker.internal:8408/openapi/Feeds/v1
  - url: http://localhost:8408/openapi/Feeds/v1
tags:
  - name: Feeds
paths:
  "/feed/{feedId}":
    get:
      tags:
        - Feeds
      parameters:
        - in: path
          name: feedId
          schema:
            type: string
          required: true
          description: Numeric ID of the feed to get
          example: "123456"
      summary: "Get Feed"
      description: "Retrieve feed details by feedId"
      responses:
        "200":
          description: "Successful feed retrieval"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFeedResult'
        "500":
          description: 'Internal server error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
  "/feed":
    post:
      tags:
        - Feeds
      summary: "Create Feed"
      description: "Create a new feed with provided products or orders"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFeedRequest'
        description: Feed creation payload
      responses:
        "200":
          description: "Feed successfully created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFeedResult'
        "500":
          description: 'Internal server error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
components:
  schemas:
    ErrorResult:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
      description: "Error messages array"
    Message:
      type: object
      properties:
        level:
          type: string
          enum:
            - emergency
            - alert
            - critical
            - error
            - warning
            - notice
            - info
          description: 'Message level (like in a logger)'
        type:
          type: string
          enum:
            - UNDEFINED
            - LOGGER_MESSAGE
          description: Type of message for client differentiation
        text:
          type: string
          description: Description of the issue
    SuccessResult:
      allOf:
        - $ref: '#/components/schemas/ErrorResult'
      type: object
      properties:
        data:
          type: object
    GetFeedResult:
      allOf:
        - $ref: '#/components/schemas/SuccessResult'
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Feed'
    Feed:
      type: object
      properties:
        feedId:
          type: string
          description: Unique feed identifier
          example: "f123456"
        feedType:
          type: string
          description: Type of the feed
          example: "AVAILABILITY"
        marketplaceIds:
          type: array
          description: List of marketplace identifiers
          items:
            type: string
          example: ["marketplace1", "marketplace2"]
        createdTime:
          type: string
          description: Feed creation timestamp in UTC
        processingStatus:
          type: string
          enum:
            - CANCELLED
            - DONE
            - FATAL
            - IN_PROGRESS
            - IN_QUEUE
          description: Current processing status of the feed
        processingStartTime:
          type: string
          description: Processing start time in UTC
        processingEndTime:
          type: string
          description: Processing end time in UTC
        resultFeedDocumentId:
          type: string
          description: ID of the result feed document
          example: "doc12345"
        documentUrl:
          type: string
          description: URL to download the feed document
          example: "https://example.com/feed/doc12345"
    CreateFeedResult:
      allOf:
        - $ref: '#/components/schemas/SuccessResult'
      type: object
      properties:
        data:
          $ref: '#/components/schemas/FeedCompact'
    CreateFeedRequest:
      type: object
      properties:
        mode:
          type: string
          description: Mode of the feed
          enum:
            - AVAILABILITY
            - SHIP_TEMPLATE
            - INVLOADER
            - ORDER_FULFILLMENT
            - POST_FLAT_FILE_PRICEANDQUANTITYONLY_UPDATE_DATA
        products:
          type: array
          description: Products data for feed
          items:
            $ref: "#/components/schemas/Product"
        orders:
          type: array
          description: Orders data for feed
          items:
            $ref: "#/components/schemas/Order"
    Product:
      type: object
      properties:
        sku:
          type: string
          description: Product SKU
          example: "SKU123"
        msin:
          type: string
          description: Product MSIN
          example: "MSIN456"
        mapPrice:
          nullable: true
          type: number
          description: Minimum Advertised Price
          example: 19.99
        price:
          type: number
          description: Product price
          example: 24.99
        quantity:
          type: number
          description: Available quantity
          example: 10
        MinimalAllowedPrice:
          type: number
          description: Minimal allowed price for repricing
          example: 15.00
        MaximumAllowedPrice:
          type: number
          description: Maximal allowed price for repricing
          example: 30.00
        HandlingTime:
          type: string
          description: Handling time
          example: "2"
        MerchantShippingGroupName:
          type: string
          description: Shipping group name
          example: "StandardShipping"
    Order:
      type: object
      properties:
        amazonOrderID:
          type: string
          description: Amazon order ID
          example: "AMZ12345"
        fulfillmentDate:
          type: string
          description: Fulfillment date in UTC
        fulfillmentData:
          $ref: "#/components/schemas/FulfillmentData"
        items:
          type: array
          description: List of order items
          items:
            $ref: "#/components/schemas/OrderItem"
    OrderItem:
      type: object
      properties:
        amazonOrderItemCode:
          type: string
          description: Amazon order item code
          example: "AMZ-ITEM-1"
        quantity:
          type: number
          description: Quantity ordered
          example: 1
    FulfillmentData:
      type: object
      properties:
        carrierCode:
          type: string
          description: Carrier code
          example: "UPS"
        carrierName:
          type: string
          description: Carrier name
          example: "UPS Express"
        shipperTrackingNumber:
          type: string
          description: Tracking number
          example: "1Z999AA10123456784"
    FeedCompact:
      type: object
      properties:
        feed_id:
          type: string
          description: Compact feed ID
          example: "compact123"
