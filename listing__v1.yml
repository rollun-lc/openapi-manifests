openapi: 3.0.0
info:
  version: "1"
  title: "Listing"
  description: "Generated by Manifests generator v1.5.3. API for managing item listings, including fetching item data, prices, and images."
servers:
  - url: http://amz-orders-ngx/openapi/Listing/v1
  - url: http://host.docker.internal:8408/openapi/Listing/v1
  - url: https://rollun.net/api/openapi/Listing/v1
tags:
  - name: Items
    description: "Endpoints for retrieving items and their related data"
  - name: Prices
    description: "Endpoints for retrieving item prices"
  - name: Images
    description: "Endpoints for retrieving item images"
  - name: Listings
    description: "Endpoints for retrieving listing details for multiple SKUs"

paths:
  "/prices":
    get:
      tags:
        - Prices
      summary: "Get all prices. Price, min, max"
      parameters:
        - in: query
          name: skus
          description: "The unique identifiers for the items to retrieve."
          required: true
          schema:
            type: array
            minItems: 1
            maxItems: 20
            items:
              type: string
              example: "2XR9C"
      responses:
        "200":
          description: "Request processed successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMpPricesResult"
        "500":
          description: "An internal server error occurred."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'

  "/items":
    get:
      tags:
        - Items
      summary: "Retrieve item data by SKU"
      description: "Fetch detailed information about items, including attributes, issues, and availability, using a specific SKU."
      parameters:
        - in: query
          name: sku
          description: "The unique identifier for the item to retrieve."
          required: true
          schema:
            type: string
            example: "2XR9C"
        - in: query
          name: includedData
          description: "Specify the data to include in the response, such as issues, attributes, summaries, etc."
          required: true
          schema:
            type: array
            items:
              type: string
              description: "Type of data to include in the response."
              example: "attributes"
      responses:
        "200":
          description: "Request processed successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetItemsResult"
        "500":
          description: "An internal server error occurred."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'

  "/images":
    get:
      tags:
        - Images
      summary: "Retrieve images of an item by ASIN"
      description: "Fetch all available images of an item based on its ASIN."
      parameters:
        - in: query
          name: asin
          description: "The unique identifier for the item."
          required: true
          schema:
            type: string
            example: "B009D2YV2Y"
      responses:
        "200":
          description: "Request processed successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetImagesResult"
        "500":
          description: "An internal server error occurred."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'

  "/listings":
    get:
      tags:
        - Listings
      summary: "Retrieve listing details for multiple SKUs"
      description: "Fetch listing details including merchant shipping group, suggested ASIN, fulfillment availability, condition type, and prices for multiple SKUs."
      parameters:
        - in: query
          name: skus
          description: "The unique identifiers for the items to retrieve listing details."
          required: true
          schema:
            type: array
            items:
              type: string
              example: "2XR9C"
      responses:
        "200":
          description: "Request processed successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetListingsResult"
        "500":
          description: "An internal server error occurred."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'

components:
  schemas:
    ErrorResult:
      type: object
      description: "Represents an error response, including detailed error messages."
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"

    Message:
      type: object
      description: "Details about an error or informational message."
      properties:
        level:
          type: string
          enum:
            - emergency
            - alert
            - critical
            - error
            - warning
            - notice
            - info
          description: "The severity level of the message."
        type:
          type: string
          enum:
            - UNDEFINED
            - LOGGER_MESSAGE
          description: "The type of message. Defaults to LOGGER_MESSAGE if not specified."
        text:
          type: string
          description: "A detailed description of the message."

    SuccessResult:
      allOf:
        - $ref: '#/components/schemas/ErrorResult'
      type: object
      description: "Represents a successful response, optionally including additional data."
      required:
        - data
      properties:
        data:
          type: object
          description: "Response-specific data."

    GetItemsResult:
      allOf:
        - $ref: '#/components/schemas/SuccessResult'
      type: object
      description: "The result of a successful GetItems request."
      properties:
        data:
          $ref: '#/components/schemas/GetItemsResultData'

    GetMpPricesResult:
      allOf:
        - $ref: '#/components/schemas/SuccessResult'
      type: object
      description: "The result of a successful GetMpPrices request."
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetMpPricesResultData'

    GetMpPricesResultData:
      type: object
      required:
        - sku
        - price
        - minPrice
        - maxPrice
        - mapPrice
      properties:
        sku:
          type: string
          example: "1030550001"
          description: "SKU"
        price:
          type: number
          example: 20.5
          nullable: true
          description: "Current price of item in Amazon"
        mapPrice:
          type: number
          nullable: true
          example: 20.5
          description: "Current map price of item in Amazon"
        minPrice:
          type: number
          nullable: true
          example: 19.0
          description: "Current min price of item in Amazon"
        maxPrice:
          type: number
          nullable: true
          example: 23.9
          description: "Current max price of item in Amazon"

    GetItemsResultData:
      type: object
      required:
        - statuses
        - errors
        - warnings
      description: "Contains detailed data for GetItems requests, including statuses, errors, and warnings."
      properties:
        statuses:
          type: array
          description: "Statuses of the items, such as DISCOVERABLE or BUYABLE."
          example: ["DISCOVERABLE"]
          nullable: true
          items:
            $ref: '#/components/schemas/StatusItem'
        errors:
          type: array
          description: "List of error messages related to the item."
          items:
            $ref: '#/components/schemas/ErrorsItem'
        warnings:
          type: array
          description: "List of warning messages related to the item."
          items:
            $ref: '#/components/schemas/WarningsItem'

    StatusItem:
      type: string
      description: "Represents the status of an item."
      example: "BUYABLE"

    ErrorsItem:
      type: string
      description: "An error message describing an issue with the item."

    WarningsItem:
      type: string
      description: "A warning message highlighting a potential issue with the item."

    GetImagesResult:
      allOf:
        - $ref: '#/components/schemas/SuccessResult'
      type: object
      description: "The result of a successful GetImages request."
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ImageResultItem'

    ImageResultItem:
      type: object
      required:
        - link
        - height
        - width
      properties:
        link:
          type: string
          format: uri
          description: "The URL of the image."
          example: "https://m.media-amazon.com/images/I/71I8PMuDPcL.jpg"
        height:
          type: integer
          description: "The height of the image in pixels."
          example: 1500
        width:
          type: integer
          description: "The width of the image in pixels."

    GetListingsResult:
      allOf:
        - $ref: '#/components/schemas/SuccessResult'
      type: object
      description: "The result of a successful GetListings request."
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetListingsResultData'

    GetListingsResultData:
      type: object
      required:
        - sku
        - asin
        - merchantShippingGroup
        - fulfillmentAvailability
        - conditionType
        - price
        - mapPrice
        - minPrice
        - maxPrice
      properties:
        sku:
          type: string
          example: "2XR9C"
          description: "The SKU of the item."
        merchantShippingGroup:
          type: string
          example: "62ca8c04-fbb3-45e1-9128-f55a1156e92c"
          description: "The merchant shipping group identifier."
        asin:
          type: string
          example: "B07BZY9BT3"
          description: "The merchant suggested ASIN for the item."
        fulfillmentAvailability:
          type: array
          description: "Information about fulfillment availability per channel."
          items:
            $ref: '#/components/schemas/FulfillmentAvailabilityItem'
        conditionType:
          type: string
          example: "new_new"
          description: "The condition type of the item."
        price:
          type: number
          example: 20.5
          nullable: true
          description: "Current price of the item."
        mapPrice:
          type: number
          example: 20.5
          nullable: true
          description: "Current MAP price of the item."
        minPrice:
          type: number
          example: 19.0
          nullable: true
          description: "Current minimum price of the item."
        maxPrice:
          type: number
          example: 23.9
          nullable: true
          description: "Current maximum price of the item."

    FulfillmentAvailabilityItem:
      type: object
      required:
        - fulfillmentChannelCode
        - quantity
        - leadTimeToShipMaxDays
      properties:
        fulfillmentChannelCode:
          type: string
          example: "05fa3c53-df62-4195-861a-8f369a3fbccd"
          description: "The code of the fulfillment channel."
        quantity:
          type: integer
          example: 1
          description: "The quantity available in this channel."
        leadTimeToShipMaxDays:
          type: integer
          example: 5
          description: "Maximum days for lead time to ship."
