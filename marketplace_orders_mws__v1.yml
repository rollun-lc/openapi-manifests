openapi: 3.0.0
info:
  version: "1"
  title: "MarketplaceOrdersMWS"
  description: Generated by Manifests generator v1.5.3. Interface for managing Amazon Marketplace orders and related order items, including retrieving order details and itemized breakdowns.
servers:
  - url: http://amz-orders-ngx/openapi/MarketplaceOrdersMWS/v1
  - url: http://localhost:8408/openapi/MarketplaceOrdersMWS/v1
tags:
  - name: Orders
    description: Endpoints related to order management
  - name: Order Items
    description: Endpoints related to order items management
paths:
  "/orders":
    get:
      tags:
        - Orders
      summary: "Retrieve list of orders"
      description: "Fetches a list of orders filtered by date ranges, modification times, or specific order numbers."
      parameters:
        - in: query
          name: "fromDate"
          description: "Start date-time for filtering orders. Format: YYYY-MM-DD HH:mm:ss"
          example: "2021-01-01 10:00:00"
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: "toDate"
          description: "End date-time for filtering orders. Format: YYYY-MM-DD HH:mm:ss"
          example: "2021-02-01 09:59:59"
          required: false
          schema:
            type: string
        - in: query
          name: "fromDateModified"
          description: "Start modification date-time for filtering orders. Format: YYYY-MM-DD HH:mm:ss"
          example: "2021-01-01 10:00:00"
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: "toDateModified"
          description: "End modification date-time for filtering orders. Format: YYYY-MM-DD HH:mm:ss"
          example: "2021-02-01 09:59:59"
          required: false
          schema:
            type: string
        - in: query
          name: "orderNumbers"
          description: "Comma-separated list of order identifiers. If specified, all other query parameters are ignored."
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              example: "123-4567890-1234567"
        - in: query
          name: pageNumber
          description: "Page number for paginated results"
          required: false
          schema:
            type: integer
            example: 1
        - in: query
          name: pageSize
          description: "Number of orders per page"
          required: false
          schema:
            type: integer
            example: 50
      responses:
        "200":
          description: "List of orders retrieved successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderCollectionResponse"
        "404":
          description: "No orders found matching criteria"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/order-items":
    get:
      tags:
        - Order Items
      summary: "Retrieve order items"
      description: "Fetches a list of items for a specific order identified by orderId."
      parameters:
        - in: query
          name: "orderId"
          description: "Unique identifier of the order"
          required: true
          schema:
            type: string
            example: "123-4567890-1234567"
      responses:
        "200":
          description: "List of order items retrieved successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderItemsCollectionResponse"
        "404":
          description: "Order not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
      description: "Contains error messages if the request fails"
    Message:
      type: object
      properties:
        level:
          type: string
          enum:
            - emergency
            - alert
            - critical
            - error
            - warning
            - notice
            - info
            - debug
        type:
          type: string
          enum:
            - UNDEFINED
            - TRACKNUMBER_ALREADY_EXIST
            - ORDER_NOT_FOUND
            - UNKNOWN_SHIPPING_METHOD
            - UNAVAILABLE_SHIPPING_METHOD
            - INVALID_RESPONSE
          description: >
            UNDEFINED - Any undefined message type.
            TRACKNUMBER_ALREADY_EXIST - A tracking number already exists.
            ORDER_NOT_FOUND - Order not found by order number.
            UNKNOWN_SHIPPING_METHOD - Unknown shipping method for the supplier.
            UNAVAILABLE_SHIPPING_METHOD - Shipping method exists but is not available for this order.
        text:
          type: string
          description: "Detailed error message"
    SuccessResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
      type: object
      properties:
        data:
          type: object
    CollectionResponse:
      allOf:
        - $ref: "#/components/schemas/SuccessResponse"
        - $ref: "#/components/schemas/PaginatedMetaResponse"
      type: object
    PaginatedMetaResponse:
      properties:
        meta:
          $ref: "#/components/schemas/PaginatedMeta"
    PaginatedMeta:
      type: object
      properties:
        pageNumber:
          type: integer
          example: 1
        pageSize:
          type: integer
          example: 50
        totalPages:
          type: integer
          example: 10
    OrderCollectionResponse:
      allOf:
        - $ref: '#/components/schemas/CollectionResponse'
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    OrderItemsCollectionResponse:
      allOf:
        - $ref: '#/components/schemas/CollectionResponse'
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
    Order:
      type: object
      properties:
        amazon_order_id:
          type: string
          example: "123-4567890-1234567"
        seller_order_id:
          type: string
          nullable: true
          example: "SO-987654"
        purchase_date:
          type: string
          example: "2024-01-01T10:00:00Z"
        last_update_date:
          type: string
          example: "2024-01-02T10:00:00Z"
        order_status:
          type: string
          example: "Shipped"
        fulfillment_channel:
          type: string
          example: "Amazon"
        sales_channel:
          type: string
          example: "Amazon.com"
        ship_service_level:
          type: string
          example: "Standard"
        shipping_address:
          $ref: "#/components/schemas/Address"
        order_total:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/OrderTotal"
        number_of_items_shipped:
          type: number
          example: 3
        number_of_items_unshipped:
          type: number
          example: 1
        payment_method:
          type: string
          example: "Credit Card"
        payment_method_details:
          $ref: "#/components/schemas/PaymentMethodDetails"
        is_replacement_order:
          type: string
          example: "false"
        replaced_order_id:
          type: string
          example: "123-1111111-1111111"
        marketplace_id:
          type: string
          example: "ATVPDKIKX0DER"
        buyer_email:
          type: string
          nullable: true
          example: "buyer@example.com"
        shipment_service_level_category:
          type: string
          example: "Standard"
        order_type:
          type: string
          example: "StandardOrder"
        earliest_ship_date:
          type: string
          example: "2024-01-03T10:00:00Z"
        latest_ship_date:
          type: string
          example: "2024-01-04T10:00:00Z"
        earliest_delivery_date:
          type: string
          nullable: true
          example: "2024-01-05T10:00:00Z"
        latest_delivery_date:
          type: string
          nullable: true
          example: "2024-01-06T10:00:00Z"
        is_business_order:
          type: string
          example: "false"
        is_prime:
          type: string
          example: "true"
        is_premium_order:
          type: string
          example: "false"
        automated_shipping_settings:
          $ref: "#/components/schemas/AutomatedShippingSettings"
        fulfillment_instruction:
          $ref: "#/components/schemas/FulfillmentInstruction"
        default_ship_from_location_address:
          $ref: "#/components/schemas/DefaultShipFromLocationAddress"
    OrderItem:
      type: object
      properties:
        asin:
          type: string
          example: "B00TEST123"
        sellerSKU:
          type: string
          example: "SKU12345"
        orderItemId:
          type: string
          example: "ITEM123456"
        title:
          type: string
          example: "Sample Product"
        quantityOrdered:
          type: number
          example: 2
        quantityShipped:
          type: number
          example: 2
        itemPrice:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/MoneyAmount'
        ShippingPrice:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/MoneyAmount'
        itemTax:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/MoneyAmount'
        promotionDiscount:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/MoneyAmount'
    Address:
      type: object
      properties:
        name:
          type: string
          example: "John Doe"
        addressLine1:
          type: string
          example: "123 Main St"
        addressLine2:
          type: string
          nullable: true
          example: "Apt 4B"
        addressLine3:
          type: string
          nullable: true
        city:
          type: string
          example: "Seattle"
        county:
          type: string
          nullable: true
        district:
          type: string
          nullable: true
        stateOrRegion:
          type: string
          nullable: true
          example: "WA"
        postalCode:
          type: string
          example: "98101"
        countryCode:
          type: string
          nullable: true
          example: "US"
        phone:
          type: string
          nullable: true
          example: "555-123-4567"
    PaymentMethodDetails:
      type: array
      items:
        type: string
        example: "Visa"
    MoneyAmount:
      type: object
      properties:
        amount:
          type: string
          example: "29.99"
        currencyCode:
          type: string
          example: "USD"
    OrderTotal:
      type: object
      properties:
        amount:
          type: string
          example: "59.98"
        currencyCode:
          type: string
          example: "USD"
    AutomatedShippingSettings:
      type: object
      nullable: true
      properties:
        has_automated_shipping_settings:
          type: boolean
          nullable: true
          example: true
        automated_carrier:
          type: string
          nullable: true
          example: "UPS"
        automated_ship_method:
          type: string
          nullable: true
          example: "SecondDay"
    FulfillmentInstruction:
      type: object
      nullable: true
      properties:
        fulfillment_supply_source_id:
          nullable: true
          type: string
          example: "WarehouseEast001"
    DefaultShipFromLocationAddress:
      type: object
      nullable: true
      properties:
        name:
          type: string
          nullable: true
          example: "Seller Warehouse East"
        addressLine1:
          nullable: true
          type: string
          example: "123 Warehouse Lane"
        city:
          nullable: true
          type: string
          example: "Boston"
        stateOrRegion:
          type: string
          nullable: true
          example: "MA"
        postalCode:
          type: string
          nullable: true
          example: "02101"
        countryCode:
          type: string
          nullable: true
          example: "US"
